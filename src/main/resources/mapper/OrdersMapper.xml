<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kgc.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.kgc.entity.Orders" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_num" property="orderNum" jdbcType="VARCHAR" />
    <result column="order_money" property="orderMoney" jdbcType="DOUBLE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="iri_id" property="iriId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="order_other" property="orderOther" jdbcType="VARCHAR" />
    <result column="order_price" property="orderPrice" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_num, order_money, remark, order_status, iri_id, create_date, flag, order_other, 
    order_price
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kgc.entity.Orders" >
    insert into orders (id, order_num, order_money, 
      remark, order_status, iri_id, 
      create_date, flag, order_other, 
      order_price)
    values (#{id,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, #{orderMoney,jdbcType=DOUBLE}, 
      #{remark,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR}, #{iriId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{flag,jdbcType=VARCHAR}, #{orderOther,jdbcType=VARCHAR}, 
      #{orderPrice,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kgc.entity.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="orderMoney != null" >
        order_money,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="iriId != null" >
        iri_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="orderOther != null" >
        order_other,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="orderMoney != null" >
        #{orderMoney,jdbcType=DOUBLE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="iriId != null" >
        #{iriId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="orderOther != null" >
        #{orderOther,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kgc.entity.Orders" >
    update orders
    <set >
      <if test="orderMoney != null" >
        order_money = #{orderMoney,jdbcType=DOUBLE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="iriId != null" >
        iri_id = #{iriId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="orderOther != null" >
        order_other = #{orderOther,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=VARCHAR},
      </if>
    </set>
    where
    <if test="orderNum!=null and orderNum!=''">
      order_num = #{orderNum,jdbcType=VARCHAR}
    </if>
    <if test="id!=null">
      id=#{id}
    </if>
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kgc.entity.Orders" >
    update orders
    set order_num = #{orderNum,jdbcType=VARCHAR},
      order_money = #{orderMoney,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      iri_id = #{iriId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=VARCHAR},
      order_other = #{orderOther,jdbcType=VARCHAR},
      order_price = #{orderPrice,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--**********************自定义的配置*******************************-->
  <!--订单和入住信息的结果集, 一对一（多对一）关联-->
  <resultMap id="ordersAndSelINIMap" type="com.kgc.entity.Orders" extends="BaseResultMap">
    <!--inRoomInfo：为另一个表对应的实体类名  iri_id：为两表其中一表的主外键-->
      <association property="inRoomInfo" column="iri_id" select="com.kgc.mapper.InRoomInfoMapper.selectByPrimaryKey"/>
  </resultMap>

  <!--配置查询的条件-->
  <sql id="Base_Column_Query">
    <where>
      <if test="t.orderNum!=null and t.orderNum!=''">
        and order_num like concat("%",#{t.orderNum},"%")
      </if>
      <if test="t.startDate!=null and t.endDate!=null">
        and create_date &gt;=#{t.startDate} and create_date &lt;=#{t.endDate}
      </if>
      <if test="t.orderStatus!=null and t.orderStatus!=''">
        and order_status=#{t.orderStatus}
      </if>
      and flag=1
    </where>
  </sql>

  <!--根据条件查询订单信息-->
  <select id="selectListTByPramas" resultMap="ordersAndSelINIMap">
      select <include refid="Base_Column_List"/> from orders <include refid="Base_Column_Query"/> order by id desc
  </select>

  <!--批量动态修改数据-->
  <update id="updBatchByPrimaryKeySelective">
    update orders
    <set>
      <if test="t.flag!=null and t.flag!=''">
        flag=#{t.flag}
      </if>
    </set>
    where id in
    <foreach open="(" item="item" index="index" collection="ids" separator="," close=")">#{item}</foreach>
  </update>

  <!--根据条件查询单个订单数据-->
  <select id="selectTByPramas" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from orders <include refid="Base_Column_Query"></include>
  </select>
</mapper>